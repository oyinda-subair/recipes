name: Tests
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
env:
  MYSQL_URL: "mysql2://root:password@127.0.0.1:3307/recipes"
  MYSQL_USERNAME: root
  MYSQL_PASSWORD: password
  MYSQL_ROOT_PASSWORD: password
  MYSQL_HOST: localhost
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Shutdown Ubuntu MySQL (SUDO)
        run: sudo service mysql stop
      - name: Set up MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3800 # Optional, default value is 3306. The port of host
          container port: 3307 # Optional, default value is 3306. The port of container
          character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
          collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
          mysql version: '8.0'
          mysql database: 'recipes' # Optional, default value is "test". The specified database which will be create
          mysql root password: password # Required if "mysql user" is empty, default is empty. The root superuser password
          mysql user: 'root' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
          mysql password: password # Required if "mysql user" exists. The password for the "mysql user"
      - uses: actions/checkout@v1
      - name:  Verify MySQL connection from host
        run: |
          sudo apt-get install -y mysql-client
          mysql -h 127.0.0.1 --port 3307 -uroot -ppassword -e 'SHOW DATABASES;'
      - name: Verify MariaDB connection
        run: mysql -h 127.0.0.1 --port 3307 -uroot -ppassword -e 'CREATE DATABASE IF NOT EXISTS recipes;'
      - name: Run tests
        env:
          MYSQL_URL: "mysql2://root:password@127.0.0.1:3307/recipes"
          MYSQL_ROOT_PASSWORD: password
          MYSQL_HOST: localhost
          MYSQL_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: sbt clean coverage test
      - name: Coverage Report
        run: sbt coverageReport
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Formatting
        run: sbt scalafmtSbtCheck scalafmtCheck test:scalafmtCheck
